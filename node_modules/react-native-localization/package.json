{
  "_args": [
    [
      {
        "raw": "react-native-localization@^0.2.1",
        "scope": null,
        "escapedName": "react-native-localization",
        "name": "react-native-localization",
        "rawSpec": "^0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "/Users/tibo/Documents/workspace/protoreact"
    ]
  ],
  "_from": "react-native-localization@>=0.2.1 <0.3.0",
  "_id": "react-native-localization@0.2.2",
  "_inCache": true,
  "_location": "/react-native-localization",
  "_nodeVersion": "8.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-localization-0.2.2.tgz_1516988401532_0.1308544143103063"
  },
  "_npmUser": {
    "name": "stefano.falda",
    "email": "stefano.falda@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-localization@^0.2.1",
    "scope": null,
    "escapedName": "react-native-localization",
    "name": "react-native-localization",
    "rawSpec": "^0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-localization/-/react-native-localization-0.2.2.tgz",
  "_shasum": "f3effc79b0fa72ca4f954d6f31b97828ec83da37",
  "_shrinkwrap": null,
  "_spec": "react-native-localization@^0.2.1",
  "_where": "/Users/tibo/Documents/workspace/protoreact",
  "author": {
    "name": "Stefano Falda",
    "email": "stefano.falda@gmail.com",
    "url": "http://www.babisoft.com"
  },
  "bugs": {
    "url": "https://github.com/stefalda/ReactNativeLocalization/issues"
  },
  "dependencies": {},
  "description": "Simple module to localize the ReactNative interface",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-rwniKQksRK77H/e8tb8GSxItwzRtfN3ooKGvri/gaEI1Up6w1YB4XNRzVOwje7PCqYdw6eJyvM2F2ABlTQRc2A==",
    "shasum": "f3effc79b0fa72ca4f954d6f31b97828ec83da37",
    "tarball": "https://registry.npmjs.org/react-native-localization/-/react-native-localization-0.2.2.tgz"
  },
  "gitHead": "0fac5f2c7a4272752cc27a2f8cde5515e56ad8c9",
  "homepage": "https://github.com/stefalda/ReactNativeLocalization",
  "keywords": [
    "react-component",
    "react-native",
    "ios",
    "localization",
    "internationalization"
  ],
  "license": "MIT",
  "main": "LocalizedStrings.js",
  "maintainers": [
    {
      "name": "stefano.falda",
      "email": "stefano.falda@gmail.com"
    }
  ],
  "name": "react-native-localization",
  "optionalDependencies": {},
  "readme": "# ReactNativeLocalization\n\nClass to localize the ReactNative interface.\n\nUse [react-localization](https://github.com/stefalda/react-localization) if you want to share code with a React project.\n\n## What it does\n\nI just needed a dead simple way to internationalize my first React Native app.\n\nAt the beginning I thought I'd expose the native iOS internationalization API (NSLocalizedString macro) to React Native, but then I've opted for a solution that seems, at least to me, more in the spirit of React (and I hope better performance wise).\n\nIn this implementation we can keep the localized strings in the same file of the React View in a similar way of how Styles are implemented (I don't deny that this approach could lead to some duplications in the translated strings, but it could be feasible to create a CommonJS module to use as common source of the strings, requiring it in the different views).\n\n\n**Beware *Expo* created apps need to be ejected before integrating native plugins like this one.**\n**So if you've used the Create React Native app shortcut you should eject the app as detailed here here.**\n\n## How it works\n\nThe Javascript library uses a native library (ReactLocalization) to get the current interface language, then it loads and displays the strings matching the current interface locale or the default language (the first one if a match is not found) if a specific localization can't be found.\n\nIt's possible to force a language different from the interface one.\n\n## Installation\nThe easiest way to install is to type just 2 commands inside your react-native project folder and you are ready to go: \n\n```\nnpm install react-native-localization --save\nreact-native link\n```\n\nDon´t forget to restart the app / node server or you will see an error.\n\nIf you're installing for Android and still experiencing problems check if \nstep 4 of \"Manual installation Android\" has been automatically executed by the linker.\n\n### Manual installation iOS\n\n1. `npm install --save react-native-localization`\n2. In the XCode's \"Project navigator\", right click on Libraries folder under your project ➜ `Add Files to <...>`\n3. Go to `node_modules` ➜ `react-native-localization` and add the `ReactNativeLocalization.xcodeproj` file\n4. Add libReactNativeLocalization.a to Build Phases -> Link Binary With Libraries\n5. Build and run\n\n### Manual installation Android\n1. `npm install --save react-native-localization`\n2. In `android/setting.gradle`\n\n    ```gradle\n    ...\n    include ':react-native-localization', ':app'\n    project(':react-native-localization').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-localization/android')\n    ```\n\n3. In `android/app/build.gradle`\n\n    ```gradle\n    ...\n    dependencies {\n        ...\n        compile project(':react-native-localization')\n    }\n    ```\n\n4. register module (in MainApplication.java)\n\n    ```java\n    import com.babisoft.ReactNativeLocalization.ReactNativeLocalizationPackage; // <--- import\n    \n    public class MainApplication extends Application implements ReactApplication {\n      ......\n        @Override\n        protected List<ReactPackage> getPackages() {\n          return Arrays.<ReactPackage>asList(\n              new MainReactPackage(),\n              new ReactNativeLocalizationPackage()\n          );\n        }\n      ......\n    }\n    ```\n\n(Thanks to @rebeccahughes for showing by example how to create an android module for React Native)\n\n## Usage\n\nIn the React class that you want to localize require the library and define the strings object passing to the constructor a simple object containing a language key (i.e. en, it, fr..) and then a list of key-value pairs with the needed localized strings.\n\n ```js\n// ES6 module syntax\nimport LocalizedStrings from 'react-native-localization';\n\n// CommonJS syntax\n// let LocalizedStrings  = require ('react-native-localization');\n\nlet strings = new LocalizedStrings({\n  \"en-US\":{\n    how:\"How do you want your egg today?\",\n    boiledEgg:\"Boiled egg\",\n    softBoiledEgg:\"Soft-boiled egg\",\n    choice:\"How to choose the egg\"\n  },\n  en:{\n    how:\"How do you want your egg today?\",\n    boiledEgg:\"Boiled egg\",\n    softBoiledEgg:\"Soft-boiled egg\",\n    choice:\"How to choose the egg\"\n  },\n  it: {\n    how:\"Come vuoi il tuo uovo oggi?\",\n    boiledEgg:\"Uovo sodo\",\n    softBoiledEgg:\"Uovo alla coque\",\n    choice:\"Come scegliere l'uovo\"\n  }\n});\n```\n\nThen use the `strings` object literal directly in the render method accessing the key of the localized string.\n\n```js\n<Text style={styles.title}>\n  {strings.how}\n</Text>\n```\n\nThe first language is considered the default one, so if a translation is missing for the selected language, the default one is shown and a line is written to the log as a reminder.\n\n#### Update / Overwrite Locale\n\nYou might have default localized in the build but then download the latest localization strings from a server. Use setContent to overwrite the whole object. **NOTE** that this will remove all other localizations if used.\n\n```js\nstrings.setContent({\n  en:{\n    how:\"How do you want your egg todajsie?\",\n    boiledEgg:\"Boiled eggsie\",\n    softBoiledEgg:\"Soft-boiled egg\",\n    choice:\"How to choose the egg\"\n  }\n})\n```\n\nYou can also only overwrite a specific language using\n\n```js\nstrings.setContent(Object.assign({},strings.getLocaleObject(),\n{\n  en:{\n    how:\"How do you want your egg todajsie?\",\n    boiledEgg:\"Boiled eggsie\",\n    softBoiledEgg:\"Soft-boiled egg\",\n    choice:\"How to choose the egg\"\n  }\n}));\n```\n\n## Typescript\nFor TypeScript, your `tsconfig.json` should be something like this:\n```json\n{\n    \"compilerOptions\": {\n        \"target\": \"es2015\",\n        \"module\": \"es2015\",\n        \"jsx\": \"react-native\",\n        \"moduleResolution\": \"node\",\n        \"allowSyntheticDefaultImports\": true\n    }\n}\n```\n\nWhere `\"module\": \"es2015\"` is the most important setting for being able to import the module properly.\n\nImport should be done like this:\n\n```ts\nimport LocalizedString from \"react-native-localization\";\n```\n\n## API\n\n* setLanguage(languageCode) - to force manually a particular language\n* getLanguage() - to get the current displayed language\n* getInterfaceLanguage() - to get the current device interface language\n* formatString() - to format the passed string replacing its placeholders with the other arguments strings\n\n```js\n  en:{\n    bread:\"bread\",\n    butter:\"butter\",\n    question:\"I'd like {0} and {1}, or just {0}\"\n  }\n  ...\n  strings.formatString(strings.question, strings.bread, strings.butter)\n```\n**Beware: do not define a string key as `formatString` or `language`!**\n* getAvailableLanguages() - to get an array of the languages passed in the constructor\n\n## Examples\nTo force a particular language use something like this:\n\n```js\n_onSetLanguageToItalian() {\n  strings.setLanguage('it');\n  this.setState({});\n}\n```\n\nIt's also possible to set the language directly in your Xcode project using the following code snippet:\n\n```objective-c\n[[NSUserDefaults standardUserDefaults] setObject:[NSArray arrayWithObjects:@\"de\", nil] forKey:@\"AppleLanguages\"];\n```\n\nReplace `de` with a [supported locale identifier](https://gist.github.com/pjc-is/49971b36db38fdeae6fc) to test.\n\nCheck out the [WIKI page](https://github.com/stefalda/ReactNativeLocalization/wiki) for additional informations.\n\n## Questions or suggestions?\nFeel free to contact me on [Twitter](https://twitter.com/talpaz) or [open an issue](https://github.com/stefalda/ReactNativeLocalization/issues/new).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stefalda/ReactNativeLocalization.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "types": "./lib/LocalizedStrings.d.ts",
  "version": "0.2.2"
}
